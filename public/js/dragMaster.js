var dragMaster = (function() {        var dragObject        var mouseDownAt	var currentDropTarget		function mouseDown(e) {		e = e || window.event                // добавить pageX/pageY для IE                if ( e.pageX == null && e.clientX != null ) {                        var html = document.documentElement                        var body = document.body                        e.pageX = e.clientX + (html && html.scrollLeft || body && body.scrollLeft || 0) - (html.clientLeft || 0)                        e.pageY = e.clientY + (html && html.scrollTop || body && body.scrollTop || 0) - (html.clientTop || 0)                } 		mouseDownAt = { x: e.pageX, y: e.pageY, element: this }		addDocumentEventHandlers()		return false	}	function mouseMove(e){		e = e || window.event                // добавить pageX/pageY для IE                if ( e.pageX == null && e.clientX != null ) {                        var html = document.documentElement                        var body = document.body                        e.pageX = e.clientX + (html && html.scrollLeft || body && body.scrollLeft || 0) - (html.clientLeft || 0)                        e.pageY = e.clientY + (html && html.scrollTop || body && body.scrollTop || 0) - (html.clientTop || 0)                }		if (mouseDownAt) {			if (Math.abs(mouseDownAt.x-e.pageX)<4 && Math.abs(mouseDownAt.y-e.pageY)<4) {				return false			}			var elem  = mouseDownAt.element			dragObject = elem.dragObject			var mouseOffset = getMouseOffset(elem, mouseDownAt.x, mouseDownAt.y)			mouseDownAt = null			dragObject.onDragStart(mouseOffset)		}		dragObject.onDragMove(e.pageX, e.pageY)				var newTarget = getCurrentTarget(e)				if (currentDropTarget != newTarget) {			if (currentDropTarget) {				currentDropTarget.onLeave()			}			if (newTarget) {				newTarget.onEnter()			}			currentDropTarget = newTarget		}                		return false    }		    function mouseUp(){		if (!dragObject) { 			mouseDownAt = null		}                 else {			if (currentDropTarget) {				currentDropTarget.accept(dragObject)				dragObject.onDragSuccess(currentDropTarget)			}                         else {				dragObject.onDragFail()			}			dragObject = null		}		removeDocumentEventHandlers()    }	function getMouseOffset(target, x, y) {		var docPos = target.getCoord();		return {x:x - docPos.left, y:y - docPos.top}	}		function getCurrentTarget(e) {		if (navigator.userAgent.match('MSIE') || navigator.userAgent.match('Gecko')) {			var x=e.clientX, y=e.clientY		} else {			var x=e.pageX, y=e.pageY		}		                dragObject.hide()		var elem = document.elementFromPoint(x,y)		dragObject.show()				while (elem) {			if (elem.dropTarget && elem.dropTarget.canAccept(dragObject)) {				return elem.dropTarget			}			elem = elem.parentNode		}				return null	}	function addDocumentEventHandlers() {		document.onmousemove = mouseMove		document.onmouseup = mouseUp		document.ondragstart = document.body.onselectstart = function() {return false}	}	function removeDocumentEventHandlers() {		document.onmousemove = document.onmouseup = document.ondragstart = document.body.onselectstart = null	}    return {        makeDraggable: function(element){                element.onmousedown = mouseDown        }    }}())